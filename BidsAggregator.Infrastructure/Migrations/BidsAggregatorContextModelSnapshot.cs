// <auto-generated />
using System;
using BidsAggregator.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BidsAggregator.Infrastructure.Migrations
{
    [DbContext(typeof(BidsAggregatorContext))]
    partial class BidsAggregatorContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BidsAggregator.Core.Entities.Inquiry.Inquirer", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ApartmentNumber")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int>("HouseNumber")
                        .HasColumnType("int")
                        .HasMaxLength(500);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("MiddleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("Porch")
                        .HasColumnType("int")
                        .HasMaxLength(20);

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasColumnType("nvarchar(70)")
                        .HasMaxLength(70);

                    b.HasKey("Id");

                    b.HasIndex("Id", "FirstName", "MiddleName", "LastName", "PhoneNumber", "Street", "HouseNumber");

                    b.ToTable("Inquirers");
                });

            modelBuilder.Entity("BidsAggregator.Core.Entities.Inquiry.InquiryItem", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Body")
                        .IsRequired()
                        .HasColumnType("nvarchar(1000)")
                        .HasMaxLength(1000);

                    b.Property<long?>("InquiryId")
                        .IsRequired()
                        .HasColumnType("bigint");

                    b.Property<bool>("IsComleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.HasKey("Id");

                    b.HasIndex("InquiryId");

                    b.ToTable("InquiryItem");
                });

            modelBuilder.Entity("BidsAggregator.Core.Entities.InquiryBase", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("InquiryType")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<long?>("PerformerId")
                        .HasColumnType("bigint");

                    b.Property<byte>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .HasDefaultValue((byte)0);

                    b.HasKey("Id");

                    b.HasIndex("PerformerId");

                    b.ToTable("Inquiries");

                    b.HasDiscriminator<int>("InquiryType");
                });

            modelBuilder.Entity("BidsAggregator.Core.Entities.Performer", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("MiddleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("NegativeRating")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasMaxLength(1000)
                        .HasDefaultValue(0);

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(11)")
                        .HasMaxLength(11);

                    b.Property<int>("PositiveRating")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasMaxLength(1000)
                        .HasDefaultValue(0);

                    b.HasKey("Id");

                    b.HasIndex("Id", "FirstName", "MiddleName", "LastName");

                    b.ToTable("Performers");
                });

            modelBuilder.Entity("BidsAggregator.Core.Entities.TempolaryInquiry.TempolaryInquirer", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int>("HouseNumber")
                        .HasColumnType("int")
                        .HasMaxLength(500);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("MiddleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasColumnType("nvarchar(70)")
                        .HasMaxLength(70);

                    b.HasKey("Id");

                    b.HasIndex("Id", "FirstName", "MiddleName", "LastName", "PhoneNumber", "Street", "HouseNumber");

                    b.ToTable("TempolaryInquirers");
                });

            modelBuilder.Entity("BidsAggregator.Core.Entities.Inquiry.Inquiry", b =>
                {
                    b.HasBaseType("BidsAggregator.Core.Entities.InquiryBase");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<long>("InquirerId")
                        .HasColumnType("bigint");

                    b.HasIndex("CreatedDate");

                    b.HasIndex("InquirerId");

                    b.HasIndex("ModifiedDate");

                    b.HasIndex("Status");

                    b.HasDiscriminator().HasValue(1);
                });

            modelBuilder.Entity("BidsAggregator.Core.Entities.TempolaryInquiry.TempolaryInquiry", b =>
                {
                    b.HasBaseType("BidsAggregator.Core.Entities.InquiryBase");

                    b.Property<string>("Body")
                        .IsRequired()
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<long>("InquirerId")
                        .HasColumnName("TempolaryInquiry_InquirerId")
                        .HasColumnType("bigint");

                    b.Property<string>("TempolaryUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.HasIndex("CreatedDate")
                        .HasName("IX_Inquiries_CreatedDate1");

                    b.HasIndex("InquirerId");

                    b.HasIndex("ModifiedDate")
                        .HasName("IX_Inquiries_ModifiedDate1");

                    b.HasIndex("Status")
                        .HasName("IX_Inquiries_Status1");

                    b.HasDiscriminator().HasValue(2);
                });

            modelBuilder.Entity("BidsAggregator.Core.Entities.Inquiry.InquiryItem", b =>
                {
                    b.HasOne("BidsAggregator.Core.Entities.Inquiry.Inquiry", null)
                        .WithMany("Tasks")
                        .HasForeignKey("InquiryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BidsAggregator.Core.Entities.InquiryBase", b =>
                {
                    b.HasOne("BidsAggregator.Core.Entities.Performer", "Performer")
                        .WithMany("Bids")
                        .HasForeignKey("PerformerId");
                });

            modelBuilder.Entity("BidsAggregator.Core.Entities.Inquiry.Inquiry", b =>
                {
                    b.HasOne("BidsAggregator.Core.Entities.Inquiry.Inquirer", "Inquirer")
                        .WithMany("Inquiries")
                        .HasForeignKey("InquirerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BidsAggregator.Core.Entities.TempolaryInquiry.TempolaryInquiry", b =>
                {
                    b.HasOne("BidsAggregator.Core.Entities.TempolaryInquiry.TempolaryInquirer", "Inquirer")
                        .WithMany("Inquiries")
                        .HasForeignKey("InquirerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
